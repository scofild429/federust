#  workspace = { members = ["client-module", "server-module"] }
[package]
name = "liberal-federated-learning"
version = "0.1.0"
authors = ["silinzhao <silin110zhao@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.84"
# client-module = {path = "./client-module", version = "0.1.0"}
# server-module = {path = "./server-module", version = "0.1.0"}
tokio = {version = "1", features = ["full"]}
sqlx = {version = "0.7", features = ["postgres", "runtime-tokio-rustls", "json", "uuid"]}
futures = "0.3"
serde = {version="1.0", feature=["derive"]}
serde_json = "1.0"
uuid = "1.3"
getrandom = { version = "0.2", features = ["js"] }
dotenv = "0.15.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"


[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
